(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{742:function(a,s,t){a.exports=t.p+"assets/img/docker_ci_00.56dc38db.png"},891:function(a,s,t){"use strict";t.r(s);var e=t(21),n=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"基于-docker-gitlab-gitlab-runner-搭建完整的自动化-ci-cd-流程-linux-一"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基于-docker-gitlab-gitlab-runner-搭建完整的自动化-ci-cd-流程-linux-一"}},[a._v("#")]),a._v(" 基于 Docker（gitlab, gitlab-runner） 搭建完整的自动化 CI，CD 流程（Linux）（一）")]),a._v(" "),s("h2",{attrs:{id:"手摸手实现-docker-安装自己的-gitlab-服务器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#手摸手实现-docker-安装自己的-gitlab-服务器"}},[a._v("#")]),a._v(" 手摸手实现 Docker 安装自己的 gitlab 服务器")]),a._v(" "),s("p",{staticClass:"date"},[a._v("2022/06/22 15:41:20 \n"),s("span",{staticClass:"leancloud_visitors",attrs:{id:"/blog/tool/DockerCI_01.html"}},[s("i",{staticClass:"shni shn-eye-fill"}),a._v(" "),s("i",{staticClass:"leancloud-visitors-count"})])]),a._v(" "),s("p",[a._v("以我自己的 "),s("span",{staticClass:"text-green"},[a._v("ubuntu22.04")]),a._v(" 版本为例")]),a._v(" "),s("h3",{attrs:{id:"docker-自动安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-自动安装"}},[a._v("#")]),a._v(" Docker 自动安装")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 1. 官方的一键安装")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-fsSL")]),a._v(" https://get.docker.com "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("bash")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-s")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--mirror")]),a._v(" Aliyun\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 2. 国内 daocloud一键安装")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-sSL")]),a._v(" https://get.daocloud.io/docker "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sh")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("p",[a._v("安装完成后运行以下命令检查 docker 是否安装成功")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--version")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h3",{attrs:{id:"安装-启动-gitlab"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装-启动-gitlab"}},[a._v("#")]),a._v(" 安装 + 启动 gitlab")]),a._v(" "),s("ol",[s("li",[a._v("搜索镜像")])]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" search gitlab\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("ol",{attrs:{start:"2"}},[s("li",[a._v("拉取镜像")])]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" pull gitlab/gitlab-ce \n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("ol",{attrs:{start:"3"}},[s("li",[a._v("启动 gitlab 服务")])]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8443")]),a._v(":443 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8090")]),a._v(":80 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8022")]),a._v(":22 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--restart")]),a._v(" always "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" gitlab "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" /usr/local/gitlab/etc:/etc/gitlab "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" /usr/local/gitlab/log:/var/log/gitlab "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" /usr/local/gitlab/data:/var/opt/gitlab "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--privileged")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("true twang2218/gitlab-ce-zh\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker run ")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# -d                #后台运行，全称：detach")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# -p 8443:443      #将容器内部端口向外映射")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# -p 8090:80       #将容器内80端口映射至宿主机8090端口，这是访问gitlab的端口")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# -p 8022:22       #将容器内22端口映射至宿主机8022端口，这是访问ssh的端口")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# --restart always #容器自启动")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# --name gitlab    #设置容器名称为gitlab")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# -v /usr/local/gitlab/etc:/etc/gitlab    #将容器/etc/gitlab目录挂载到宿主机/usr/local/gitlab/etc目录下，若宿主机内此目录不存在将会自动创建")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# -v /usr/local/gitlab/log:/var/log/gitlab    #与上面一样")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# -v /usr/local/gitlab/data:/var/opt/gitlab   #与上面一样")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# --privileged=true         #让容器获取宿主机root权限")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# gitlab/gitlab-ce    #镜像的名称，这里也可以写镜像ID")]),a._v("\n\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br")])]),s("ol",{attrs:{start:"4"}},[s("li",[a._v("查看 gitlab 是否启动")])]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h3",{attrs:{id:"配置-gitlab-服务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置-gitlab-服务"}},[a._v("#")]),a._v(" 配置 gitlab 服务")]),a._v(" "),s("ol",[s("li",[a._v("进入容器")])]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-it")]),a._v(" gitlab "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("bash")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("ol",{attrs:{start:"2"}},[s("li",[a._v("修改gitlab.rb文件")])]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("/先进入到gitlab目录\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" /etc/gitlab   \n//编辑gitlab.rb文件  \n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("vim")]),a._v(" gitlab.rb\n\n// 在gitlab创建项目时候http地址的host"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("不用添加端口"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\nexternal_url "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'http://xx.xx.xx.xx'")]),a._v("\n\n//配置ssh协议所使用的访问地址和端口\ngitlab_rails"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'gitlab_ssh_host'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'192.168.XX.XX'")]),a._v(" //和上一个IP输入的一样\ngitlab_rails"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'gitlab_shell_ssh_port'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8022")]),a._v(" // 此端口是run时22端口映射的8022端口\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br")])]),s("p",[s("span",{staticClass:"text-red"},[a._v("PS:在搭建完成后，你会发现你的 gitlab 的界面会与其他人的不太一样，比如项目左侧缺少了监控、分析等导航，那是因为在 gitlab.rb 文件中把这些导航都注释了，想要添加的话需要在此文件中启用")])]),a._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[a._v("配置 gitlab.yml 文件")])]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("// 文件路径 /opt/gitlab/embedded/service/gitlab-rails/config\n//先进入到 config 目录下\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" /opt/gitlab/embedded/service/gitlab-rails/config\n//打开编辑gitlab.yml文件\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("vim")]),a._v(" gitlab.yml\n//修改 gitlab 的 "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("host")]),a._v(" 与上面.rb文件修改的一致\n// 修改port 为8090\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br")])]),s("p",[s("img",{attrs:{src:t(742),alt:"图片"}})]),a._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[a._v("重启gitlab服务")])]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("gitlab-ctl restart\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("等待几秒就可以在浏览器上打开 192.168.XX.X:8090,等待出现 gitlab 的欢迎界面，默认的账户名称是 root，需要修改密码，然后就可以正常使用了")]),a._v(" "),s("base-valine"),a._v(" "),s("el-backtop",{attrs:{"visibility-height":0}})],1)}),[],!1,null,null,null);s.default=n.exports}}]);